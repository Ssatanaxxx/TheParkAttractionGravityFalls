import React, { useState } from 'react';
import './sidebar.css';

interface Attraction {
  id: number;
  name: string;
  icon: string;
  isSecret?: boolean;
}

const Sidebar: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);

  // –î–∞–Ω–Ω—ã–µ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤
  const attractions: Attraction[] = [
    { id: 1, name: '–¢–∞–π–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞', icon: 'üîÆ', isSecret: true },
    { id: 2, name: '–õ–∞–±–∏—Ä–∏–Ω—Ç –ì–Ω–æ–º–æ–≤', icon: 'üßô' },
    { id: 3, name: '–ö–æ–ª–µ—Å–æ –ß—É–¥–µ—Å', icon: 'üé°' },
    { id: 4, name: '–î–æ–º-–ø–µ—Ä–µ–≤—ë—Ä—Ç—ã—à', icon: 'üè†' },
    { id: 5, name: '–¢—É–Ω–Ω–µ–ª—å –£–∂–∞—Å–æ–≤', icon: 'üëª', isSecret: true },
    { id: 6, name: '–ö–∞—Ñ–µ "–£ –ó–µ—Ç—ã"', icon: '‚òï' }
  ];

  const [activeAttraction, setActiveAttraction] = useState<number | null>(null);

  return (
    <>
      <aside className={`sidebar ${isOpen ? 'open' : ''}`}>
        <div className="sidebar-content">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Å—Ç–∏–ª–µ Gravity Falls */}
          <div className="park-header">
            <h2>–¢–ê–ô–ù–´–ô –ü–ê–†–ö</h2>
            <p>–ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã –∏ –∑–∞–≥–∞–¥–∫–∏</p>
            <div className="divider"></div>
          </div>

          {/* –ú–µ–Ω—é –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ */}
          <nav className="attractions-menu">
            <ul>
              {attractions.map((attraction) => (
                <li
                  key={attraction.id}
                  className={`${attraction.isSecret ? 'secret' : ''} ${activeAttraction === attraction.id ? 'active' : ''}`}
                  onClick={() => setActiveAttraction(attraction.id)}
                >
                  <span className="attraction-icon">{attraction.icon}</span>
                  <span className="attraction-name">{attraction.name}</span>
                  {attraction.isSecret && <span className="secret-badge">–°–ï–ö–†–ï–¢</span>}
                </li>
              ))}
            </ul>
          </nav>

          {/* –°–µ–∫—Ü–∏—è —Å –∑–∞–≥–∞–¥–∫–æ–π –¥–Ω—è */}
          <div className="riddle-section">
            <div className="divider"></div>
            <h3>–ó–∞–≥–∞–¥–∫–∞ –¥–Ω—è:</h3>
            <p>"–ß—Ç–æ –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π, –Ω–æ –Ω–µ–≤–∏–¥–∏–º–æ?"</p>
            <button className="riddle-button">–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç</button>
          </div>
        </div>

        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <div className="sidebar-decoration">
          <div className="cipher-wheel"></div>
        </div>
      </aside>

      <button
        className={`toggle-btn ${isOpen ? 'open' : ''}`}
        onClick={() => setIsOpen(!isOpen)}
      >
        <span>{isOpen ? '‚óÄ' : '‚ñ∂'}</span>
      </button>
    </>
  );
};

export default Sidebar;